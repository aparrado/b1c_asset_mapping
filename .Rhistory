file <- as.location("test.geojson")
out <- geojson_read(file, what = "sp")
plot(out)
file <- as.location("tst.geojson")
file <- as.location("test.json")
out <- geojson_read(file, what = "sp")
plot(out)
file <- as.location("tiral.json")
out <- geojson_read(file, what = "sp")
plot(out)
file <- as.location("ct.geojson")
file <- as.location("ct.geojson")
file <- system.file("examples","california.geojson", package = "geojsonio")
file <- as.location("ct.geojson")
source('~/.active-rstudio-document')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
install.packages("leaflet")
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
setwd("Users/Andres L. Parrado/Desktop/B1C/")
setwd("Users/Andres L. Parrado/Desktop/B1C")
setwd("/Users/Andres L. Parrado/Desktop/B1C")
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('~/.active-rstudio-document')
?addGeoJSON
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
plot(CT)
source('~/.active-rstudio-document')
m
m<- leaflet() %>% addTiles() %>%
addGeoJSON(out, weight =1, color = "#444444", fill = FALSE)
m
source('~/.active-rstudio-document')
m
source('~/.active-rstudio-document')
m
plot(CT)
View(CT)
source('~/.active-rstudio-document')
m
source('~/.active-rstudio-document')
m
source('~/.active-rstudio-document')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/jsondata.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
install.packages('rsconnect')
rsconnect::setAccountInfo(name='building1community',
token='92110A8F0A786032646A0A8D499A41E6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='building1community',
token='92110A8F0A786032646A0A8D499A41E6',
secret='<SECRET>')
rsconnect::setAccountInfo(name='building1community',
token='92110A8F0A786032646A0A8D499A41E6',
secret='SLw5J8b6UatDfWh8zzLIoF1Dhci2e5a5LAg0pJBd')
runApp('shiny_test.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/Andres L. Parrado/Desktop/B1C/shiny_test')
rsconnect::deployApp('C:/Users/Andres L. Parrado/Desktop/B1C/shiny_test.r')
rsconnect::deployApp('C:/Users/Andres L. Parrado/Desktop/B1C/')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
%>% addPolygons(data = CT, weight=1, opacity = 1, fillOpacity = 0.1, fillColor = "Green")
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
runApp('shiny_test.R')
file <- as.location("stamford.geojson")
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
as.numeric(CT$customers)
CT$customers<-as.numeric(CT$customers)
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
runApp('shiny_test.R')
?leafletOutput
runApp('shiny_test.R')
library(shiny); runApp('shiny_test.R')
?makeIcon
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
iconSet <- iconList(
housing = makeIcon("house-icon.png"),
hospital = makeIcon("house-icon.png")
)
m<- leaflet() %>% addTiles() %>%
addAwesomeMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[icontype], popup = ~html,group=~Type) %>%
addLayersControl(
overlayGroups = c("Housing"),position = c("topleft"),
options = layersControlOptions(collapsed = FALSE,fillOpacity = 0.3)
) %>% addPolygons(data = CT, weight=3, opacity = 1, fillOpacity = 0.3, fillColor = ~pal(customers),color=~pal(customers))
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
?iconList
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
iconSet <- iconList(
housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
hospital = makeIcon("hospital",iconWidth = 32, iconHeight = 32),
school = makeIcon("http://icons.iconarchive.com/icons/paomedia/small-n-flat/1024/house-icon.png",iconWidth = 32, iconHeight = 32)
)
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
?addLayersControl
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
source('C:/Users/Andres L. Parrado/Desktop/B1C/asset mapping ongoing.R')
m
runApp('shiny_test.R')
library(shiny); runApp('shiny_test.R')
#testdata <- read.csv("/Users/Andres L. Parrado/Desktop/B1C/test_data.csv")
testdata <- read.csv("test_data.csv")
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
install.packages("glmnet")
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
source('~/Downloads/b1c_asset_mapping-master/asset mapping ongoing.R')
m
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
#m<- leaflet() %>% addTiles()
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
m<- leaflet() %>% addTiles()
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
m<- leaflet() %>% addTiles()
m
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m
m <- leaflet() %>% addTiles()
m
m <- m %>% addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.1, fillColor = ~pal(customers),color=~pal(customers),group ="No B1C Customers")
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
m <- leaflet() %>% addTiles()
m
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m
m <- m %>% addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.1, fillColor = ~pal(customers),color=~pal(customers),group ="No B1C Customers")
m <- m %>% addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.1, fillColor = ~pal(customers),color=~pal(customers),group ="No B1C Customers")
m
m <- m %>%  addPolygons(data = CT, weight=3, opacity = 1, fillOpacity = 0.2, dashArray = "", group = "Show/Hide B1C Costumers",
color= ~pal(customers),fillColor = ~pal(customers),
highlight = highlightOptions(
weight = 5,
dashArray = "",
fillOpacity = 0.5,
bringToFront = TRUE))
m
m <- m %>%  addLayersControl(
overlayGroups = c("Housing","No B1C Customers"),position = c("topleft"),
options = layersControlOptions(collapsed = FALSE,fillOpacity = 0.3)
)
m <- m %>%  addLayersControl(
overlayGroups = c("Housing","No B1C Customers"),position = c("topleft"),
options = layersControlOptions(collapsed = FALSE,fillOpacity = 0.3)
)
m
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
#Creating variables for papers and no papers
for (i in 1:nrow(testdata)){
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Housing, needs papers"
}
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Housing, no papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Hospital, needs papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Hospital, no papers"
}
}
m <- leaflet() %>% addTiles()
m
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m
m <- m %>%  addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.2, dashArray = "", group = "Show/Hide B1C Costumers",
color= ~pal(customers),fillColor = ~pal(customers),
highlight = highlightOptions(
weight = 5,
dashArray = "",
fillOpacity = 0.5,
bringToFront = TRUE))
m
m <- m %>%  addLayersControl(
overlayGroups = c("Housing","No B1C Customers"),position = c("topleft"),
options = layersControlOptions(collapsed = FALSE)
)
m
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
#Creating variables for papers and no papers
for (i in 1:nrow(testdata)){
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Housing, needs papers"
}
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Housing, no papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Hospital, needs papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Hospital, no papers"
}
}
m <- leaflet() %>% addTiles()
m
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m
m <- m %>%  addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.2, dashArray = "", group = "Show/Hide B1C Costumers",
color= ~pal(customers),fillColor = ~pal(customers),
highlight = highlightOptions(
weight = 5,
dashArray = "",
fillOpacity = 0.5,
bringToFront = TRUE))
m
m <- m %>%   addLayersControl(
overlayGroups = c("Housing, needs papers","Housing, no papers",
"Hospital, needs papers", "Hospital, no papers","Show/Hide B1C Costumers"),
position = c("topleft"),
options = layersControlOptions(collapsed = FALSE,opacity = 1))
m
knitr::opts_chunk$set(echo = TRUE)
options(warn=-1)
library(leaflet)
library(htmltools)
#Loading data
testdata <- read.csv("test_data.csv")
#Making data into HTML
for (i in 1:nrow(testdata)) {
testdata$html[i] <- paste(sep = "",
"<b><a href='",testdata$Website[i],"'>",
testdata$Name[i],"</a></b><br/>",
testdata$Address.Line.1[i], "<br/>",
testdata$Address.Line.2[i],"<br/>","Phone: ",
testdata$Phone[i])
}
#Creating an iconset that has an icon for each category.
iconSet <- iconList(
Housing = makeIcon("house-icon.png",iconWidth = 24, iconHeight = 24),
Hospital = makeIcon("hospital-icon.png",iconWidth = 24, iconHeight = 24)
)
stamford <- geojsonio::geojson_read("stamford.geojson", what = "sp")
stamford$customers<-as.numeric(stamford$customers)
bins <- c(0,2,4,6,8,Inf)
pal <- colorBin("YlOrRd", domain = stamford$customers, bins = bins)
#Creating variables for papers and no papers
for (i in 1:nrow(testdata)){
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Housing, needs papers"
}
if (testdata$Type[i] == "Housing" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Housing, no papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "Yes"){
testdata$group[i] = "Hospital, needs papers"
}
if (testdata$Type[i] == "Hospital" & testdata$Accept_Undocumented[i] == "No"){
testdata$group[i] = "Hospital, no papers"
}
}
m <- leaflet() %>% addTiles()
m
m <- m %>% addMarkers(data=testdata, ~Longitude, ~Latitude,icon = ~iconSet[Type], popup = ~html,group=~Type)
m
m <- m %>%  addPolygons(data = stamford, weight=3, opacity = 1, fillOpacity = 0.2, dashArray = "", group = "Show/Hide B1C Costumers",
color= ~pal(customers),fillColor = ~pal(customers),
highlight = highlightOptions(
weight = 5,
dashArray = "",
fillOpacity = 0.5,
bringToFront = TRUE))
m
m <- m %>% addLegend(data=CT,pal=pal, values=~customers,opacity=0.7,title="Number of B1C Customers",position="bottomright",group="Show/Hide B1C Costumers")
m <- m %>%   addLayersControl(
overlayGroups = c("Housing, needs papers","Housing, no papers",
"Hospital, needs papers", "Hospital, no papers","Show/Hide B1C Costumers"),
position = c("topleft"),
options = layersControlOptions(collapsed = FALSE,opacity = 1))
m
m <- m %>% addLegend(data=CT,pal=pal, values=~customers,opacity=0.7,title="Number of B1C Customers",position="bottomright",group="Show/Hide B1C Costumers")
m
m <- m %>% addLegend(data=stamford,pal=pal, values=~customers,opacity=0.7,title="Number of B1C Customers",position="bottomright",group="Show/Hide B1C Costumers")
m
